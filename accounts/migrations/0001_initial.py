# Generated by Django 3.2.16 on 2022-12-07 04:59

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='担当名')),
            ],
            options={
                'verbose_name': '担当',
                'verbose_name_plural': '担当',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True, verbose_name='班名')),
            ],
            options={
                'verbose_name': '班',
                'verbose_name_plural': '班',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, verbose_name='名')),
                ('last_name', models.CharField(max_length=30, verbose_name='姓')),
                ('email', models.EmailField(max_length=254, verbose_name='メールアドレス')),
                ('course', models.CharField(choices=[('理科一類', '理科一類'), ('理科二類', '理科二類'), ('理科三類', '理科三類'), ('文科一類', '文科一類'), ('文科二類', '文科二類'), ('文科三類', '文科三類')], default=None, max_length=4, verbose_name='科類')),
                ('faculty', models.CharField(blank=True, choices=[('法学部', '法学部'), ('医学部', '医学部'), ('工学部', '工学部'), ('文学部', '文学部'), ('理学部', '理学部'), ('農学部', '農学部'), ('経済学部', '経済学部'), ('教養学部', '教養学部'), ('教育学部', '教育学部'), ('薬学部', '薬学部')], max_length=4, null=True, verbose_name='学部')),
                ('department', models.CharField(blank=True, max_length=30, null=True, verbose_name='学科')),
                ('enrolled_year', models.IntegerField(choices=[(2009, '2009年度'), (2010, '2010年度'), (2011, '2011年度'), (2012, '2012年度'), (2013, '2013年度'), (2014, '2014年度'), (2015, '2015年度'), (2016, '2016年度'), (2017, '2017年度'), (2018, '2018年度'), (2019, '2019年度'), (2020, '2020年度'), (2021, '2021年度'), (2022, '2022年度')], default=2022, verbose_name='入学年度')),
                ('grade', models.IntegerField(choices=[(0, '0期'), (1, '1期'), (2, '2期'), (3, '3期'), (4, '4期'), (5, '5期'), (6, '6期'), (7, '7期'), (8, '8期'), (9, '9期'), (10, '10期'), (11, '11期'), (12, '12期'), (13, '13期')], default=13, verbose_name='期')),
                ('sex', models.CharField(choices=[('未回答', '回答しない'), ('男', '男'), ('女', '女')], default=None, max_length=5, verbose_name='性別')),
                ('division', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='division_members', to='accounts.division', verbose_name='担当')),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_members', to='accounts.group', verbose_name='班')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
